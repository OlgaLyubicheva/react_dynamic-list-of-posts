{"version":3,"sources":["components/User.js","components/Comment.js","components/CommentList/CommentList.js","components/Post/Post.js","components/PostList.js","components/loadingData.js","App.js","index.js"],"names":["User","_ref","name","username","email","address","react_default","a","createElement","className","concat","city","street","defaultProps","Comment","comment","components_User","body","CommentList","comments","map","currentComment","components_Comment","key","id","Post","title","user","components_CommentList_CommentList","PostList","posts","post","components_Post_Post","Object","assign","loadData","asyncToGenerator","regenerator_default","mark","_callee","url","response","data","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","_x","apply","this","arguments","getPostsWithUsers","_ref2","_callee2","users","postsWithUsers","_context2","objectSpread","find","person","userId","filter","postId","App","state","isLoadButtonVisible","textOfLoadButton","postsWhithUser","searchInput","handleClick","event","loadButton","target","_this","setState","disabled","then","toConsumableArray","filtredBy","preventDefault","searchBy","value","filtrField","byField","i","checked","includes","newFilter","prevState","filterBlur","handleChange","_event$target","defineProperty","_this$state","type","onClick","action","onSubmit","onBlur","onChange","htmlFor","defaultChecked","components_PostList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.f44f947b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ name, username, email, address }) => (\n  <div className=\"post-page__user\">\n    {name}\n    {username && `(${username})`}\n    <br />\n    {email}\n    <br />\n    {address && `City: ${address.city}`}\n    <br />\n    {address && `Street: ${address.street}`}\n  </div>\n);\n\nUser.propTypes = {\n  name: PropTypes.string,\n  username: PropTypes.string,\n  email: PropTypes.string.isRequired,\n  address: PropTypes.shape({\n    city: PropTypes.string,\n    street: PropTypes.string,\n  }),\n};\n\nUser.defaultProps = {\n  name: null,\n  username: null,\n  address: null,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\n\nconst Comment = ({ comment }) => (\n  <div className=\"comment-list__comment\">\n    <User email={comment.email} />\n    <div>\n      <h4>{comment.name}</h4>\n      <p>{comment.body}</p>\n    </div>\n  </div>\n);\n\nComment.propTypes = {\n  comment: PropTypes.shape({\n    email: PropTypes.string.isRequired,\n    name: PropTypes.string,\n    body: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Comment from '../Comment';\nimport './commentlist.css';\n\nconst CommentList = ({ comments }) => (\n  <div className=\"comment-list\">\n    <h3>Comments</h3>\n    <div className=\"comment-list__body\">\n      {comments && comments.map(currentComment => (\n        <Comment comment={currentComment} key={currentComment.id} />))\n      }\n    </div>\n  </div>\n);\n\nCommentList.propTypes = {\n  comments: PropTypes.arrayOf(\n    PropTypes.shape({\n      email: PropTypes.string,\n      name: PropTypes.string,\n      body: PropTypes.string,\n    })\n  ),\n};\n\nCommentList.defaultProps = {\n  comments: null,\n};\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from '../User';\nimport CommentList from '../CommentList/CommentList';\nimport './post.css';\n\nconst Post = ({ title, body, comments, user }) => (\n  <div className=\"post-page\">\n    <User {...user} />\n\n    <div className=\"post-page__post\">\n      <h2>{title}</h2>\n      <div>{body}</div>\n      <CommentList comments={comments} />\n    </div>\n  </div>\n);\n\nPost.propTypes = {\n  title: PropTypes.string.isRequired,\n  body: PropTypes.string.isRequired,\n  comments: PropTypes.arrayOf(\n    PropTypes.shape({\n      email: PropTypes.string,\n      name: PropTypes.string,\n      body: PropTypes.string,\n    })\n  ),\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    username: PropTypes.string,\n    email: PropTypes.string,\n    address: PropTypes.object,\n  }).isRequired,\n};\n\nPost.defaultProps = {\n  comments: null,\n};\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Post from './Post/Post';\n\nconst PostList = ({ posts }) => (\n  <div>\n    {\n      posts.map(post => (\n        <Post {...post} key={post.id} />\n      ))\n    }\n  </div>\n);\n\nPostList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    body: PropTypes.string,\n    comments: PropTypes.arrayOf(PropTypes.object),\n    id: PropTypes.number,\n    user: PropTypes.shape({\n      name: PropTypes.string,\n      username: PropTypes.string,\n      email: PropTypes.string.isRequired,\n      address: PropTypes.object,\n    }),\n  })).isRequired,\n};\n\nexport default PostList;\n","export const loadData = async(url) => {\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n};\n\nexport const getPostsWithUsers = async() => {\n  const url = 'https://jsonplaceholder.typicode.com/';\n\n  const posts = await loadData(`${url}posts`);\n  const users = await loadData(`${url}users`);\n  const comments = await loadData(`${url}comments`);\n\n  const postsWithUsers = await posts.map(post => (\n    {\n      ...post,\n      user: users.find(person => person.id === post.userId),\n      comments: comments.filter(comment => post.id === comment.postId),\n    }\n  ));\n\n  return postsWithUsers;\n};\n","import React from 'react';\nimport './App.css';\nimport PostList from './components/PostList';\nimport { getPostsWithUsers } from './components/loadingData';\n\nclass App extends React.Component {\n  state = {\n    isLoadButtonVisible: true,\n    textOfLoadButton: 'Load',\n    postsWhithUser: [],\n    filter: [],\n    searchInput: '',\n  }\n\n  handleClick = (event) => {\n    const loadButton = event.target;\n\n    this.setState({\n      textOfLoadButton: 'Loading...',\n    });\n\n    loadButton.disabled = this.state.textOfLoadButton === 'Loading...';\n\n    getPostsWithUsers().then((data) => {\n      this.setState({\n        postsWhithUser: [...data],\n        filter: [...data],\n        isLoadButtonVisible: false,\n      });\n    });\n  }\n\n  filtredBy = (event) => {\n    event.preventDefault();\n    const { searchBy } = event.target;\n    const value = this.state.searchInput;\n\n    if (value !== '') {\n      let byField = '';\n      let filtrField;\n\n      for (let i = 0; i < 2; i += 1) {\n        if (searchBy[i].checked) {\n          byField += searchBy[i].value;\n        }\n      }\n\n      switch (byField) {\n        case 'body':\n          filtrField = post => post.body.includes(value);\n          break;\n        case 'titlebody':\n          filtrField = post => post.title.includes(value) || post.body.includes(value);\n          break;\n        default:\n          filtrField = post => post.title.includes(value);\n      }\n\n      const newFilter = this.state.postsWhithUser.filter(filtrField);\n\n      this.setState({\n        filter: [...newFilter],\n      });\n    } else {\n      this.setState(prevState => ({ filter: [...prevState.postsWhithUser] }));\n    }\n  }\n\n  filterBlur = (event) => {\n    const { value } = event.target.value;\n\n    if (value === '') {\n      this.setState(prevState => ({ filter: [...prevState.postsWhithUser] }));\n    }\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const { isLoadButtonVisible, filter, textOfLoadButton, searchInput } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Dynamic list of posts</h1>\n        {\n          (isLoadButtonVisible)\n            ? (\n              <button\n                type=\"button\"\n                className=\"load-button\"\n                onClick={this.handleClick}\n              >\n                {textOfLoadButton}\n              </button>\n            )\n            : (\n              <div>\n                <form\n                  className=\"search-form\"\n                  name=\"searchForm\"\n                  action=\"\"\n                  onSubmit={this.filtredBy}\n                >\n                  <input\n                    className=\"search-form__input\"\n                    name=\"searchInput\"\n                    value={searchInput}\n                    type=\"search\"\n                    onBlur={this.filterBlur}\n                    onChange={this.handleChange}\n                  />\n\n                  <button\n                    type=\"submit\"\n                  >\n                    Search\n                  </button>\n\n                  <br />\n\n                  <label htmlFor=\"checkTitle\">\n                    <input\n                      name=\"searchBy\"\n                      type=\"checkbox\"\n                      value=\"title\"\n                      defaultChecked=\"true\"\n                      id=\"checkTitle\"\n                    />\n                    by post title\n                  </label>\n\n                  <label htmlFor=\"checkBody\">\n                    <input\n                      name=\"searchBy\"\n                      type=\"checkbox\"\n                      value=\"body\"\n                      id=\"checkBody\"\n                    />\n                    by post text\n                  </label>\n                </form>\n\n                <PostList posts={filter} />\n              </div>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}