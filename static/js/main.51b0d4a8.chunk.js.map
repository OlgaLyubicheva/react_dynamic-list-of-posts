{"version":3,"sources":["components/User.js","components/Comment.js","components/CommentList/CommentList.js","components/Post/Post.js","components/PostList.js","components/loadingData.js","App.js","index.js"],"names":["User","_ref","name","username","email","address","react_default","a","createElement","className","concat","city","street","defaultProps","Comment","comment","components_User","body","CommentList","comments","map","currentComment","components_Comment","key","id","postId","Post","title","user","components_CommentList_CommentList","PostList","posts","post","components_Post_Post","Object","assign","loadData","asyncToGenerator","regenerator_default","mark","_callee","url","response","data","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","_x","apply","this","arguments","getPostsWithUsers","_ref2","_callee2","users","postsWithUsers","_context2","objectSpread","find","person","userId","filter","App","state","renderButton","postsWhithUser","handleClick","loadButton","document","querySelector","disabled","textContent","then","_this","setState","toConsumableArray","filtredBy","searchForm","elements","userValue","searchInput","value","filtrField","byField","i","searchBy","checked","includes","newFilter","prevState","filterBlur","_this2","type","onClick","action","onSubmit","event","preventDefault","onBlur","htmlFor","defaultChecked","components_PostList","React","Component","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.51b0d4a8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ name, username, email, address }) => (\n  <div className=\"post-page__user\">\n    {name}\n    {username && `(${username})`}\n    <br />\n    {email}\n    <br />\n    {address && `City: ${address.city}`}\n    <br />\n    {address && `Street: ${address.street}`}\n  </div>\n);\n\nUser.propTypes = {\n  name: PropTypes.string,\n  username: PropTypes.string,\n  email: PropTypes.string.isRequired,\n  address: PropTypes.shape({\n    city: PropTypes.string,\n    street: PropTypes.string,\n  }),\n};\n\nUser.defaultProps = {\n  name: null,\n  username: null,\n  address: null,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\n\nconst Comment = ({ comment }) => (\n  <div className=\"comment-list__comment\">\n    <User email={comment.email} />\n    <div>\n      <h4>{comment.name}</h4>\n      <p>{comment.body}</p>\n    </div>\n  </div>\n);\n\nComment.propTypes = {\n  comment: PropTypes.shape({\n    email: PropTypes.string.isRequired,\n    name: PropTypes.string,\n    body: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Comment from '../Comment';\nimport './commentlist.css';\n\nconst CommentList = ({ comments }) => (\n  <div className=\"comment-list\">\n    <h3>Comments</h3>\n    <div className=\"comment-list__body\">\n      {comments && comments.map(currentComment => (\n        <Comment comment={currentComment} key={\"comment\" + currentComment.id + currentComment.postId}/>))\n      }\n    </div>\n  </div>\n);\n\nCommentList.propTypes = {\n  comments: PropTypes.arrayOf(\n    PropTypes.shape({\n      email: PropTypes.string,\n      name: PropTypes.string,\n      body: PropTypes.string,\n    })\n  ),\n};\n\nCommentList.defaultProps = {\n  comments: null,\n};\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from '../User';\nimport CommentList from '../CommentList/CommentList';\nimport './post.css';\n\nconst Post = ({ title, body, comments, user }) => (\n  <div className=\"post-page\">\n    <User {...user} />\n\n    <div className=\"post-page__post\">\n      <h2>{title}</h2>\n      <div>{body}</div>\n      <CommentList comments={comments} />\n    </div>\n  </div>\n);\n\nPost.propTypes = {\n  title: PropTypes.string.isRequired,\n  body: PropTypes.string.isRequired,\n  comments: PropTypes.arrayOf(\n    PropTypes.shape({\n      email: PropTypes.string,\n      name: PropTypes.string,\n      body: PropTypes.string,\n    })\n  ),\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    username: PropTypes.string,\n    email: PropTypes.string,\n    address: PropTypes.object,\n  }).isRequired,\n};\n\nPost.defaultProps = {\n  comments: null,\n};\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Post from './Post/Post';\n\nconst PostList = ({ posts }) => (\n  <div>\n    {\n      posts.map(post => (\n        <Post {...post} key={`post ${post.id}`} />\n      ))\n    }\n  </div>\n);\n\nPostList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    body: PropTypes.string,\n    comments: PropTypes.arrayOf(PropTypes.object),\n    id: PropTypes.number,\n    user: PropTypes.shape({\n      name: PropTypes.string,\n      username: PropTypes.string,\n      email: PropTypes.string.isRequired,\n      address: PropTypes.object,\n    }),\n  })).isRequired,\n};\n\nexport default PostList;\n","export const loadData = async(url) => {\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n};\n\nexport const getPostsWithUsers = async() => {\n  const url = 'https://jsonplaceholder.typicode.com/';\n\n  const posts = await loadData(`${url}posts`);\n  const users = await loadData(`${url}users`);\n  const comments = await loadData(`${url}comments`);\n\n  const postsWithUsers = await posts.map(post => (\n    {\n      ...post,\n      user: users.find(person => person.id === post.userId),\n      comments: comments.filter(comment => post.id === comment.postId),\n    }\n  ));\n\n  return postsWithUsers;\n};\n","import React from 'react';\nimport './App.css';\nimport PostList from './components/PostList';\nimport { getPostsWithUsers } from './components/loadingData';\n\nclass App extends React.Component {\n  state = {\n    renderButton: true,\n    postsWhithUser: [],\n    filter: [],\n  }\n\n  handleClick = () => {\n    const loadButton = document.querySelector('.load-button');\n    loadButton.disabled = true;\n    loadButton.textContent = 'Loading...';\n\n    getPostsWithUsers().then((data) => {\n      this.setState({\n        postsWhithUser: [...data],\n        filter: [...data],\n        renderButton: false,\n      });\n    });\n  }\n\n  filtredBy = () => {\n    const searchForm = document.searchForm.elements;\n    const userValue = searchForm.searchInput.value;\n\n    if (userValue !== '') {\n      let byField = '';\n      let filtrField;\n\n      for (let i = 0; i < 2; i += 1) {\n        if (searchForm.searchBy[i].checked) {\n          byField += searchForm.searchBy[i].value;\n        }\n      }\n\n      switch (byField) {\n        case 'body':\n          filtrField = post => post.body.includes(userValue);\n          break;\n        case 'titlebody':\n          filtrField = post => post.title.includes(userValue) || post.body.includes(userValue);\n          break;\n        default:\n          filtrField = post => post.title.includes(userValue);\n      }\n\n      const newFilter = this.state.postsWhithUser.filter(filtrField);\n      this.setState({\n        filter: [...newFilter],\n      });\n    } else {\n      this.setState(prevState => ({ filter: [...prevState.postsWhithUser] }));\n    }\n  }\n\n  filterBlur = () => {\n    const searchForm = document.searchForm.elements;\n    const userValue = searchForm.searchInput.value;\n\n    if (userValue === '') {\n      this.setState(prevState => ({ filter: [...prevState.postsWhithUser] }));\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Dynamic list of posts</h1>\n        {\n          (this.state.renderButton)\n            ? (\n              <button\n                type=\"button\"\n                className=\"load-button\"\n                onClick={this.handleClick}\n              >\n                Load\n              </button>\n            )\n            : (\n              <div>\n                <form\n                  className=\"search-form\"\n                  name=\"searchForm\"\n                  action=\"\"\n                  onSubmit={(event) => { event.preventDefault(); this.filtredBy(); }}\n                >\n                  <input\n                    className=\"search-form__input\"\n                    name=\"searchInput\"\n                    type=\"search\"\n                    onBlur={this.filterBlur}\n                  />\n\n                  <button\n                    type=\"submit\"\n                  >\n                    Search\n                  </button>\n\n                  <br />\n\n                  <label htmlFor=\"checkTitle\">\n                    <input\n                      name=\"searchBy\"\n                      type=\"checkbox\"\n                      value=\"title\"\n                      defaultChecked=\"true\"\n                      id=\"checkTitle\"\n                    />\n                    by post title\n                  </label>\n\n                  <label htmlFor=\"checkBody\">\n                    <input\n                      name=\"searchBy\"\n                      type=\"checkbox\"\n                      value=\"body\"\n                      id=\"checkBody\"\n                    />\n                    by post text\n                  </label>\n                </form>\n\n                <PostList posts={this.state.filter} />\n              </div>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}